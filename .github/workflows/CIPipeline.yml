name: Pipeline CI/CD

on:
  push:
    branches:
      - main
      - DEV
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Revisión de Estilo de Código
    steps:
      - name: Obtener código fuente
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependencias
        run: npm install

      - name: Revisar archivos JavaScript
        run: npm run lint:js

  test:
    runs-on: ubuntu-latest
    name: Ejecución de Pruebas
    needs: lint
    steps:
      - name: Obtener código fuente
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas
        run: |
          mkdir -p test-results
          npm test | tee test-results/results.txt
        continue-on-error: true

  notify_dev_success:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/DEV' && needs.test.result == 'success'
    steps:
      - name: Enviar notificación de éxito a Slack para DEV
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Las pruebas en la rama DEV pasaron exitosamente.\nMensaje del Commit: ${{ github.event.head_commit.message }}\nAutor: ${{ github.actor }}\nRama: ${{ github.ref }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify_dev_failure:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/DEV' && needs.test.result == 'failure'
    steps:
      - name: Enviar notificación de fallo a Slack para DEV
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Las pruebas en la rama DEV fallaron.\nMensaje del Commit: ${{ github.event.head_commit.message }}\nAutor: ${{ github.actor }}\nRama: ${{ github.ref }}\nResultados de pruebas:\n$(cat test-results/results.txt)"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  

  deploy:
    runs-on: ubuntu-latest
    name: Despliegue en GitHub Pages
    steps:
      - name: Obtener código fuente
        uses: actions/checkout@v2

      - name: Crear directorio de despliegue
        run: mkdir -p gh-pages

      - name: Copiar archivos de docs a gh-pages
        run: cp -r docs/* gh-pages/

      - name: Desplegar en GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT }}
          publish_dir: ./gh-pages

  notify_deploy_success:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Enviar notificación de éxito de deploy a Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "El despliegue en la rama ${{ github.ref }} fue exitoso.\nMensaje del Commit: ${{ github.event.head_commit.message }}\nAutor: ${{ github.actor }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify_deploy_failure:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - name: Enviar notificación de fallo de deploy a Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "El despliegue en la rama ${{ github.ref }} falló.\nMensaje del Commit: ${{ github.event.head_commit.message }}\nAutor: ${{ github.actor }}\nError: $(cat ./deploy-error-log.txt)"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
