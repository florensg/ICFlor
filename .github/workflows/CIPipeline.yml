name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main
      - test

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Configuracion de Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Instalacion de dependencias
        run: npm install
  
      - name: Lint de archivos JavaScript
        run: npm run lint:js

  test:
    runs-on: ubuntu-latest

    name: Ejecución de Pruebas
    needs: lint
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Configuracion de Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    name: Despliegue en GitHub Pages
    needs: test
    steps:
      - name: Obtener código fuente
        uses: actions/checkout@v2

      - name: Crear directorio de despliegue
        run: mkdir -p gh-pages

      - name: Copiar archivos de docs a gh-pages
        run: cp -r docs/* gh-pages/

      - name: Desplegar en GitHub Pages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test'
        id: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./gh-pages

      - name: Notificar en Slack (Despliegue Exitoso)
        if: success() && github.ref == 'main' || github.ref == 'test'
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline CI/CD para la rama ${{ github.ref }} desplegada exitosamente."}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notificar en Slack (Error en Despliegue)
        if: failure() && github.ref == 'main' || github.ref == 'test'
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline CI/CD para la rama ${{ github.ref }} falló durante el despliegue."}' ${{ secrets.SLACK_WEBHOOK_URL }}
